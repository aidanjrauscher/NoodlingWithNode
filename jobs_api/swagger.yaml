openapi: 3.0.0
info:
  title: JobsAPI
  contact: {}
  version: "1.0"
servers:
  - url: https://jobsapi-2g0y.onrender.com/api/v1
    variables: {}
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LoginRequest"
                - example:
                    email: ajr7@email.com
                    password: password
            example:
              email: ajr7@email.com
              password: password
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/register:
    post:
      tags:
        - auth
      summary: Register
      operationId: Register
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RegisterRequest"
                - example:
                    name: aidan
                    email: ajr@email.com
                    password: password
            example:
              name: aidan
              email: ajr@email.com
              password: password
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
        - jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateJobRequest"
                - example:
                    company: spotify
                    position: software engineer
            example:
              company: spotify
              position: software engineer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the job ID
    get:
      tags:
        - jobs
      summary: Get Single Job
      operationId: GetSingleJob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - jobs
      summary: Update Job
      operationId: UpdateJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateJobRequest"
                - example:
                    company: tesla
                    position: fullstack engineer
            example:
              company: tesla
              position: fullstack engineer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    LoginRequest:
      title: LoginRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: ajr7@email.com
        password: password
    RegisterRequest:
      title: RegisterRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: aidan
        email: ajr@email.com
        password: password
    CreateJobRequest:
      title: CreateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: spotify
        position: software engineer
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: tesla
        position: fullstack engineer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: auth
    description: ""
  - name: jobs
    description: ""
